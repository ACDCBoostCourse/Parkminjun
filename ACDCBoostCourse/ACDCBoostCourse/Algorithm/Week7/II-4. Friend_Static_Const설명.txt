[II-4. 1]
friend -> 접근 제어 지시자(private, protected, public)의 영항을 받지 않는다.

[II-4. 2]
Static 멤버 변수는 모든 객체가 공유해야 하므로 프로그램 전체 영역에서 메모리 유지가 되야 한다. 
따라서 반드시 전역 범위에서 정의 및 초기화를 해주어야 한다.
--> class 내부나 어떤 함수 내부에서 정의되면 안된다. class 또는 함수 외부에서 정의되어야한다.

[II-4. 3]
const int val : val은 상수. 수정 불가능
const int *val : val은 const int형을 가리키는 포인터(상수 포인터). 포인터가 가리키고 있는 주소를바꿀 수는 있으나 역참조가 불가능하다. (*val = 1 // 불가능)
int * const val : val 은 int형을 가리키는 포인터. 포인터가 가리키는 주소의 값을 바꾸는 건 가능하지만 다른 주소를 가리키는 것은 불가능하다. (val = &temp // 불가능)
const int * const val : val은 const int형을 가리키는 포인터. 포인터가 가리키는 주소를 변경할 수 없고 역참조 또한 불가능하다.

const int func (int a) { } : func 함수의 반환값을 읽기 전용으로 사용. 즉 상수를 반환하므로 const int 형의 변수에 값을 할당해야 한다.
int func (const int a) { } : func 함수에 전달하는 변수 a의 값이 손상되는 것을 막기 위해 const 키워드를 사용한다.
int func (int a) const { } : func가 어떤 클래스의 멤버 함수일 때, func 함수의 선언 뒤에 const 키워드를 붙이게 되면 func 함수 내부에서 발생하는 멤버의 변경을 감지하게 된다. 
즉, func 함수 내부에서 멤버의 값이 바뀌게 되면 에러가 발생한다.
